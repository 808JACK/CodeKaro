version: '3.8'

services:
  # Eureka Service Discovery - Must start first
  eureka-service:
    build:
      context: ./Eureka Service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Auth Service
  auth-service:
    build:
      context: ./Auth Service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8091:8091"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      eureka-service:
        condition: service_healthy
    restart: unless-stopped

  # Problem Service
  problem-service:
    build:
      context: ./Problem Service
      dockerfile: Dockerfile
    container_name: problem-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      eureka-service:
        condition: service_healthy
    restart: unless-stopped

  # Collab Service
  collab-service:
    build:
      context: ./Collab Service
      dockerfile: Dockerfile
    container_name: collab-service
    ports:
      - "8092:8092"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
    depends_on:
      eureka-service:
        condition: service_healthy
    restart: unless-stopped

  # API Gateway - Must start after all services
  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8086:8086"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-service:8761/eureka
      - AUTH_SERVICE_URL=http://auth-service:8091
      - PROBLEM_SERVICE_URL=http://problem-service:8082
      - COLLAB_SERVICE_URL=http://collab-service:8092
    depends_on:
      - eureka-service
      - auth-service
      - problem-service
      - collab-service
    restart: unless-stopped

  # MinIO Object Storage - For local development only
  # In production, we use Railway MinIO
  minio:
    image: minio/minio:latest
    container_name: codekaro-minio
    ports:
      - "9000:9000"      # MinIO API
      - "9001:9001"      # MinIO Console (Web UI)
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    profiles:
      - dev  # Only runs in dev profile

volumes:
  minio_data:
    driver: local